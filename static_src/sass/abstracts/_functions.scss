/* ============================================
    Strip the unit from the given value and return the value
*/

@use 'sass:math';

@function strip-unit($value) {
    @return math.div($value, $value * 0 + 1);
}

/* ============================================
    Return an em unit based on the pixel value and context
*/

@function rem($px, $context: $base-font-size) {
    @return #{strip-unit(math.div($px, strip-unit($context)))}rem;
}

/* ============================================
    Z-index function: Use this to keep track of z-indices
*/

@function z($list, $element) {
    $z-index: index($list, $element);

    @if $z-index {
        @return $z-index;
    }

    @warn 'There is no item "#{$element}" in this list; choose one of: #{$list}';
    @return null;
}

/* ============================================
    Widths for flex columns
*/

@function gutter-factor($columns) {
    /* there will be 1 fewer gutters than columns
       e.g. a 3-column grid has 2 gutters,
        so each gutter will be 3/2 * the amount subtracted.
        to compensate for this, we can multiply the gutter-width by 2/3. */

    @return math.div($columns - 1, $columns);
}

@function column-width($columns, $gutter-width: 0) {
    // the base width of a column in an n-column grid is (100% / n)
    // e.g. 50% in a 2-column grid
    $percent: math.div(100%, $columns);

    // we subtract (n-1)/n times the gutter width, since there are n-1 gutters
    $share-of-gutter: gutter-factor($columns) * $gutter-width;

    @return calc(#{$percent} - #{$share-of-gutter});
}
